{"version":3,"file":"popover.esm.js","sources":["../../../src/components/popover/popover.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n\n  // Types\n  ContextType,\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  Ref,\n  MutableRefObject,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport {\n  getFocusableElements,\n  Focus,\n  focusIn,\n  FocusResult,\n  isFocusableElement,\n  FocusableMode,\n} from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\n\nenum PopoverStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  popoverState: PopoverStates\n\n  button: HTMLElement | null\n  buttonId: string\n  panel: HTMLElement | null\n  panelId: string\n}\n\nenum ActionTypes {\n  TogglePopover,\n  ClosePopover,\n\n  SetButton,\n  SetButtonId,\n  SetPanel,\n  SetPanelId,\n}\n\ntype Actions =\n  | { type: ActionTypes.TogglePopover }\n  | { type: ActionTypes.ClosePopover }\n  | { type: ActionTypes.SetButton; button: HTMLElement | null }\n  | { type: ActionTypes.SetButtonId; buttonId: string }\n  | { type: ActionTypes.SetPanel; panel: HTMLElement | null }\n  | { type: ActionTypes.SetPanelId; panelId: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.TogglePopover]: state => ({\n    ...state,\n    popoverState: match(state.popoverState, {\n      [PopoverStates.Open]: PopoverStates.Closed,\n      [PopoverStates.Closed]: PopoverStates.Open,\n    }),\n  }),\n  [ActionTypes.ClosePopover](state) {\n    if (state.popoverState === PopoverStates.Closed) return state\n    return { ...state, popoverState: PopoverStates.Closed }\n  },\n  [ActionTypes.SetButton](state, action) {\n    if (state.button === action.button) return state\n    return { ...state, button: action.button }\n  },\n  [ActionTypes.SetButtonId](state, action) {\n    if (state.buttonId === action.buttonId) return state\n    return { ...state, buttonId: action.buttonId }\n  },\n  [ActionTypes.SetPanel](state, action) {\n    if (state.panel === action.panel) return state\n    return { ...state, panel: action.panel }\n  },\n  [ActionTypes.SetPanelId](state, action) {\n    if (state.panelId === action.panelId) return state\n    return { ...state, panelId: action.panelId }\n  },\n}\n\nlet PopoverContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nPopoverContext.displayName = 'PopoverContext'\n\nfunction usePopoverContext(component: string) {\n  let context = useContext(PopoverContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverContext)\n    throw err\n  }\n  return context\n}\n\nlet PopoverAPIContext = createContext<{\n  close(focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>): void\n} | null>(null)\nPopoverAPIContext.displayName = 'PopoverAPIContext'\n\nfunction usePopoverAPIContext(component: string) {\n  let context = useContext(PopoverAPIContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverAPIContext)\n    throw err\n  }\n  return context\n}\n\nlet PopoverGroupContext = createContext<{\n  registerPopover(registerbag: PopoverRegisterBag): void\n  unregisterPopover(registerbag: PopoverRegisterBag): void\n  isFocusWithinPopoverGroup(): boolean\n  closeOthers(buttonId: string): void\n} | null>(null)\nPopoverGroupContext.displayName = 'PopoverGroupContext'\n\nfunction usePopoverGroupContext() {\n  return useContext(PopoverGroupContext)\n}\n\nlet PopoverPanelContext = createContext<string | null>(null)\nPopoverPanelContext.displayName = 'PopoverPanelContext'\n\nfunction usePopoverPanelContext() {\n  return useContext(PopoverPanelContext)\n}\n\ninterface PopoverRegisterBag {\n  buttonId: string\n  panelId: string\n  close(): void\n}\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_POPOVER_TAG = 'div' as const\ninterface PopoverRenderPropArg {\n  open: boolean\n  close(focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>): void\n}\n\nexport function Popover<TTag extends ElementType = typeof DEFAULT_POPOVER_TAG>(\n  props: Props<TTag, PopoverRenderPropArg>\n) {\n  let buttonId = `headlessui-popover-button-${useId()}`\n  let panelId = `headlessui-popover-panel-${useId()}`\n\n  let reducerBag = useReducer(stateReducer, {\n    popoverState: PopoverStates.Closed,\n    button: null,\n    buttonId,\n    panel: null,\n    panelId,\n  } as StateDefinition)\n  let [{ popoverState, button, panel }, dispatch] = reducerBag\n\n  useEffect(() => dispatch({ type: ActionTypes.SetButtonId, buttonId }), [buttonId, dispatch])\n  useEffect(() => dispatch({ type: ActionTypes.SetPanelId, panelId }), [panelId, dispatch])\n\n  let registerBag = useMemo(\n    () => ({ buttonId, panelId, close: () => dispatch({ type: ActionTypes.ClosePopover }) }),\n    [buttonId, panelId, dispatch]\n  )\n\n  let groupContext = usePopoverGroupContext()\n  let registerPopover = groupContext?.registerPopover\n  let isFocusWithinPopoverGroup = useCallback(() => {\n    return (\n      groupContext?.isFocusWithinPopoverGroup() ??\n      (button?.contains(document.activeElement) || panel?.contains(document.activeElement))\n    )\n  }, [groupContext, button, panel])\n\n  useEffect(() => registerPopover?.(registerBag), [registerPopover, registerBag])\n\n  // Handle focus out\n  useWindowEvent(\n    'focus',\n    () => {\n      if (popoverState !== PopoverStates.Open) return\n      if (isFocusWithinPopoverGroup()) return\n      if (!button) return\n      if (!panel) return\n\n      dispatch({ type: ActionTypes.ClosePopover })\n    },\n    true\n  )\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (popoverState !== PopoverStates.Open) return\n\n    if (button?.contains(target)) return\n    if (panel?.contains(target)) return\n\n    dispatch({ type: ActionTypes.ClosePopover })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      button?.focus()\n    }\n  })\n\n  let close = useCallback(\n    (focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>) => {\n      dispatch({ type: ActionTypes.ClosePopover })\n\n      let restoreElement = (() => {\n        if (!focusableElement) return button\n        if (focusableElement instanceof HTMLElement) return focusableElement\n        if (focusableElement.current instanceof HTMLElement) return focusableElement.current\n\n        return button\n      })()\n\n      restoreElement?.focus()\n    },\n    [dispatch, button]\n  )\n\n  let api = useMemo<ContextType<typeof PopoverAPIContext>>(() => ({ close }), [close])\n\n  let slot = useMemo<PopoverRenderPropArg>(\n    () => ({ open: popoverState === PopoverStates.Open, close }),\n    [popoverState, close]\n  )\n\n  return (\n    <PopoverContext.Provider value={reducerBag}>\n      <PopoverAPIContext.Provider value={api}>\n        <OpenClosedProvider\n          value={match(popoverState, {\n            [PopoverStates.Open]: State.Open,\n            [PopoverStates.Closed]: State.Closed,\n          })}\n        >\n          {render({\n            props,\n            slot,\n            defaultTag: DEFAULT_POPOVER_TAG,\n            name: 'Popover',\n          })}\n        </OpenClosedProvider>\n      </PopoverAPIContext.Provider>\n    </PopoverContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-expanded'\n  | 'aria-controls'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = usePopoverContext([Popover.name, Button.name].join('.'))\n  let internalButtonRef = useRef<HTMLButtonElement | null>(null)\n\n  let groupContext = usePopoverGroupContext()\n  let closeOthers = groupContext?.closeOthers\n\n  let panelContext = usePopoverPanelContext()\n  let isWithinPanel = panelContext === null ? false : panelContext === state.panelId\n\n  let buttonRef = useSyncRefs(\n    internalButtonRef,\n    ref,\n    isWithinPanel ? null : button => dispatch({ type: ActionTypes.SetButton, button })\n  )\n\n  // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n  let activeElementRef = useRef<Element | null>(null)\n  let previousActiveElementRef = useRef<Element | null>(\n    typeof window === 'undefined' ? null : document.activeElement\n  )\n  useWindowEvent(\n    'focus',\n    () => {\n      previousActiveElementRef.current = activeElementRef.current\n      activeElementRef.current = document.activeElement\n    },\n    true\n  )\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      if (isWithinPanel) {\n        if (state.popoverState === PopoverStates.Closed) return\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault() // Prevent triggering a *click* event\n            event.stopPropagation()\n            dispatch({ type: ActionTypes.ClosePopover })\n            state.button?.focus() // Re-focus the original opening Button\n            break\n        }\n      } else {\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault() // Prevent triggering a *click* event\n            event.stopPropagation()\n            if (state.popoverState === PopoverStates.Closed) closeOthers?.(state.buttonId)\n            dispatch({ type: ActionTypes.TogglePopover })\n            break\n\n          case Keys.Escape:\n            if (state.popoverState !== PopoverStates.Open) return closeOthers?.(state.buttonId)\n            if (!internalButtonRef.current) return\n            if (!internalButtonRef.current.contains(document.activeElement)) return\n            dispatch({ type: ActionTypes.ClosePopover })\n            break\n\n          case Keys.Tab:\n            if (state.popoverState !== PopoverStates.Open) return\n            if (!state.panel) return\n            if (!state.button) return\n\n            // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n            if (event.shiftKey) {\n              // Check if the last focused element exists, and check that it is not inside button or panel itself\n              if (!previousActiveElementRef.current) return\n              if (state.button?.contains(previousActiveElementRef.current)) return\n              if (state.panel.contains(previousActiveElementRef.current)) return\n\n              // Check if the last focused element is *after* the button in the DOM\n              let focusableElements = getFocusableElements()\n              let previousIdx = focusableElements.indexOf(\n                previousActiveElementRef.current as HTMLElement\n              )\n              let buttonIdx = focusableElements.indexOf(state.button)\n              if (buttonIdx > previousIdx) return\n\n              event.preventDefault()\n              event.stopPropagation()\n\n              focusIn(state.panel, Focus.Last)\n            } else {\n              event.preventDefault()\n              event.stopPropagation()\n\n              focusIn(state.panel, Focus.First)\n            }\n\n            break\n        }\n      }\n    },\n    [\n      dispatch,\n      state.popoverState,\n      state.buttonId,\n      state.button,\n      state.panel,\n      internalButtonRef,\n      closeOthers,\n      isWithinPanel,\n    ]\n  )\n\n  let handleKeyUp = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      if (isWithinPanel) return\n      if (event.key === Keys.Space) {\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n      }\n      if (state.popoverState !== PopoverStates.Open) return\n      if (!state.panel) return\n      if (!state.button) return\n\n      // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n      switch (event.key) {\n        case Keys.Tab:\n          // Check if the last focused element exists, and check that it is not inside button or panel itself\n          if (!previousActiveElementRef.current) return\n          if (state.button?.contains(previousActiveElementRef.current)) return\n          if (state.panel.contains(previousActiveElementRef.current)) return\n\n          // Check if the last focused element is *after* the button in the DOM\n          let focusableElements = getFocusableElements()\n          let previousIdx = focusableElements.indexOf(\n            previousActiveElementRef.current as HTMLElement\n          )\n          let buttonIdx = focusableElements.indexOf(state.button)\n          if (buttonIdx > previousIdx) return\n\n          event.preventDefault()\n          event.stopPropagation()\n          focusIn(state.panel, Focus.Last)\n          break\n      }\n    },\n    [state.popoverState, state.panel, state.button, isWithinPanel]\n  )\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return\n      if (props.disabled) return\n      if (isWithinPanel) {\n        dispatch({ type: ActionTypes.ClosePopover })\n        state.button?.focus() // Re-focus the original opening Button\n      } else {\n        if (state.popoverState === PopoverStates.Closed) closeOthers?.(state.buttonId)\n        state.button?.focus()\n        dispatch({ type: ActionTypes.TogglePopover })\n      }\n    },\n    [\n      dispatch,\n      state.button,\n      state.popoverState,\n      state.buttonId,\n      props.disabled,\n      closeOthers,\n      isWithinPanel,\n    ]\n  )\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.popoverState === PopoverStates.Open }),\n    [state]\n  )\n\n  let passthroughProps = props\n  let propsWeControl = isWithinPanel\n    ? {\n        type: 'button',\n        onKeyDown: handleKeyDown,\n        onClick: handleClick,\n      }\n    : {\n        ref: buttonRef,\n        id: state.buttonId,\n        type: 'button',\n        'aria-expanded': props.disabled ? undefined : state.popoverState === PopoverStates.Open,\n        'aria-controls': state.panel ? state.panelId : undefined,\n        onKeyDown: handleKeyDown,\n        onKeyUp: handleKeyUp,\n        onClick: handleClick,\n      }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Popover.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_OVERLAY_TAG = 'div' as const\ninterface OverlayRenderPropArg {\n  open: boolean\n}\ntype OverlayPropsWeControl = 'id' | 'aria-hidden' | 'onClick'\n\nlet OverlayRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Overlay = forwardRefWithAs(function Overlay<\n  TTag extends ElementType = typeof DEFAULT_OVERLAY_TAG\n>(\n  props: Props<TTag, OverlayRenderPropArg, OverlayPropsWeControl> &\n    PropsForFeatures<typeof OverlayRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [{ popoverState }, dispatch] = usePopoverContext([Popover.name, Overlay.name].join('.'))\n  let overlayRef = useSyncRefs(ref)\n\n  let id = `headlessui-popover-overlay-${useId()}`\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return popoverState === PopoverStates.Open\n  })()\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      dispatch({ type: ActionTypes.ClosePopover })\n    },\n    [dispatch]\n  )\n\n  let slot = useMemo<OverlayRenderPropArg>(() => ({ open: popoverState === PopoverStates.Open }), [\n    popoverState,\n  ])\n  let propsWeControl = {\n    ref: overlayRef,\n    id,\n    'aria-hidden': true,\n    onClick: handleClick,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OVERLAY_TAG,\n    features: OverlayRenderFeatures,\n    visible,\n    name: 'Popover.Overlay',\n  })\n})\n\n// ---\n\nlet DEFAULT_PANEL_TAG = 'div' as const\ninterface PanelRenderPropArg {\n  open: boolean\n  close: (focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>) => void\n}\ntype PanelPropsWeControl = 'id' | 'onKeyDown'\n\nlet PanelRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Panel = forwardRefWithAs(function Panel<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, PanelRenderPropArg, PanelPropsWeControl> &\n    PropsForFeatures<typeof PanelRenderFeatures> & {\n      focus?: boolean\n    },\n  ref: Ref<HTMLDivElement>\n) {\n  let { focus = false, ...passthroughProps } = props\n\n  let [state, dispatch] = usePopoverContext([Popover.name, Panel.name].join('.'))\n  let { close } = usePopoverAPIContext([Popover.name, Panel.name].join('.'))\n\n  let internalPanelRef = useRef<HTMLDivElement | null>(null)\n  let panelRef = useSyncRefs(internalPanelRef, ref, panel => {\n    dispatch({ type: ActionTypes.SetPanel, panel })\n  })\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return state.popoverState === PopoverStates.Open\n  })()\n\n  let handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      switch (event.key) {\n        case Keys.Escape:\n          if (state.popoverState !== PopoverStates.Open) return\n          if (!internalPanelRef.current) return\n          if (!internalPanelRef.current.contains(document.activeElement)) return\n          event.preventDefault()\n          dispatch({ type: ActionTypes.ClosePopover })\n          state.button?.focus()\n          break\n      }\n    },\n    [state, internalPanelRef, dispatch]\n  )\n\n  // Unlink on \"unmount\" myself\n  useEffect(() => () => dispatch({ type: ActionTypes.SetPanel, panel: null }), [dispatch])\n\n  // Unlink on \"unmount\" children\n  useEffect(() => {\n    if (state.popoverState === PopoverStates.Closed && (props.unmount ?? true)) {\n      dispatch({ type: ActionTypes.SetPanel, panel: null })\n    }\n  }, [state.popoverState, props.unmount, dispatch])\n\n  // Move focus within panel\n  useEffect(() => {\n    if (!focus) return\n    if (state.popoverState !== PopoverStates.Open) return\n    if (!internalPanelRef.current) return\n\n    let activeElement = document.activeElement as HTMLElement\n    if (internalPanelRef.current.contains(activeElement)) return // Already focused within Dialog\n\n    focusIn(internalPanelRef.current, Focus.First)\n  }, [focus, internalPanelRef, state.popoverState])\n\n  // Handle Tab / Shift+Tab focus positioning\n  useWindowEvent('keydown', event => {\n    if (state.popoverState !== PopoverStates.Open) return\n    if (!internalPanelRef.current) return\n    if (event.key !== Keys.Tab) return\n    if (!document.activeElement) return\n    if (!internalPanelRef.current) return\n    if (!internalPanelRef.current.contains(document.activeElement)) return\n\n    // We will take-over the default tab behaviour so that we have a bit\n    // control over what is focused next. It will behave exactly the same,\n    // but it will also \"fix\" some issues based on whether you are using a\n    // Portal or not.\n    event.preventDefault()\n\n    let result = focusIn(internalPanelRef.current, event.shiftKey ? Focus.Previous : Focus.Next)\n\n    if (result === FocusResult.Underflow) {\n      return state.button?.focus()\n    } else if (result === FocusResult.Overflow) {\n      if (!state.button) return\n\n      let elements = getFocusableElements()\n      let buttonIdx = elements.indexOf(state.button)\n\n      let nextElements = elements\n        .splice(buttonIdx + 1) // Elements after button\n        .filter(element => !internalPanelRef.current?.contains(element)) // Ignore items in panel\n\n      // Try to focus the next element, however it could fail if we are in a\n      // Portal that happens to be the very last one in the DOM. In that\n      // case we would Error (because nothing after the button is\n      // focusable). Therefore we will try and focus the very first item in\n      // the document.body.\n      if (focusIn(nextElements, Focus.First) === FocusResult.Error) {\n        focusIn(document.body, Focus.First)\n      }\n    }\n  })\n\n  // Handle focus out when we are in special \"focus\" mode\n  useWindowEvent(\n    'focus',\n    () => {\n      if (!focus) return\n      if (state.popoverState !== PopoverStates.Open) return\n      if (!internalPanelRef.current) return\n\n      if (internalPanelRef.current?.contains(document.activeElement as HTMLElement)) return\n      dispatch({ type: ActionTypes.ClosePopover })\n    },\n    true\n  )\n\n  let slot = useMemo<PanelRenderPropArg>(\n    () => ({ open: state.popoverState === PopoverStates.Open, close }),\n    [state, close]\n  )\n  let propsWeControl = {\n    ref: panelRef,\n    id: state.panelId,\n    onKeyDown: handleKeyDown,\n  }\n\n  return (\n    <PopoverPanelContext.Provider value={state.panelId}>\n      {render({\n        props: { ...passthroughProps, ...propsWeControl },\n        slot,\n        defaultTag: DEFAULT_PANEL_TAG,\n        features: PanelRenderFeatures,\n        visible,\n        name: 'Popover.Panel',\n      })}\n    </PopoverPanelContext.Provider>\n  )\n})\n\n// ---\n\nlet DEFAULT_GROUP_TAG = 'div' as const\ninterface GroupRenderPropArg {}\ntype GroupPropsWeControl = 'id'\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, GroupRenderPropArg, GroupPropsWeControl>\n) {\n  let groupRef = useRef<HTMLElement | null>(null)\n  let [popovers, setPopovers] = useState<PopoverRegisterBag[]>([])\n\n  let unregisterPopover = useCallback(\n    (registerbag: PopoverRegisterBag) => {\n      setPopovers(existing => {\n        let idx = existing.indexOf(registerbag)\n        if (idx !== -1) {\n          let clone = existing.slice()\n          clone.splice(idx, 1)\n          return clone\n        }\n        return existing\n      })\n    },\n    [setPopovers]\n  )\n\n  let registerPopover = useCallback(\n    (registerbag: PopoverRegisterBag) => {\n      setPopovers(existing => [...existing, registerbag])\n      return () => unregisterPopover(registerbag)\n    },\n    [setPopovers, unregisterPopover]\n  )\n\n  let isFocusWithinPopoverGroup = useCallback(() => {\n    let element = document.activeElement as HTMLElement\n\n    if (groupRef.current?.contains(element)) return true\n\n    // Check if the focus is in one of the button or panel elements. This is important in case you are rendering inside a Portal.\n    return popovers.some(bag => {\n      return (\n        document.getElementById(bag.buttonId)?.contains(element) ||\n        document.getElementById(bag.panelId)?.contains(element)\n      )\n    })\n  }, [groupRef, popovers])\n\n  let closeOthers = useCallback(\n    (buttonId: string) => {\n      for (let popover of popovers) {\n        if (popover.buttonId !== buttonId) popover.close()\n      }\n    },\n    [popovers]\n  )\n\n  let contextBag = useMemo<ContextType<typeof PopoverGroupContext>>(\n    () => ({\n      registerPopover: registerPopover,\n      unregisterPopover: unregisterPopover,\n      isFocusWithinPopoverGroup,\n      closeOthers,\n    }),\n    [registerPopover, unregisterPopover, isFocusWithinPopoverGroup, closeOthers]\n  )\n\n  let slot = useMemo<GroupRenderPropArg>(() => ({}), [])\n  let propsWeControl = { ref: groupRef }\n  let passthroughProps = props\n\n  return (\n    <PopoverGroupContext.Provider value={contextBag}>\n      {render({\n        props: { ...passthroughProps, ...propsWeControl },\n        slot,\n        defaultTag: DEFAULT_GROUP_TAG,\n        name: 'Popover.Group',\n      })}\n    </PopoverGroupContext.Provider>\n  )\n}\n\n// ---\n\nPopover.Button = Button\nPopover.Overlay = Overlay\nPopover.Panel = Panel\nPopover.Group = Group\n"],"names":["PopoverStates","ActionTypes","reducers","TogglePopover","state","popoverState","match","Open","Closed","ClosePopover","SetButton","action","button","SetButtonId","buttonId","SetPanel","panel","SetPanelId","panelId","PopoverContext","createContext","displayName","usePopoverContext","component","context","useContext","err","Error","Popover","name","captureStackTrace","PopoverAPIContext","usePopoverAPIContext","PopoverGroupContext","usePopoverGroupContext","PopoverPanelContext","usePopoverPanelContext","stateReducer","type","DEFAULT_POPOVER_TAG","props","useId","reducerBag","useReducer","dispatch","useEffect","registerBag","useMemo","close","groupContext","registerPopover","isFocusWithinPopoverGroup","useCallback","contains","document","activeElement","useWindowEvent","event","target","isFocusableElement","FocusableMode","Loose","preventDefault","focus","focusableElement","restoreElement","HTMLElement","current","api","slot","open","React","Provider","value","OpenClosedProvider","State","render","defaultTag","DEFAULT_BUTTON_TAG","Button","forwardRefWithAs","ref","join","internalButtonRef","useRef","closeOthers","panelContext","isWithinPanel","buttonRef","useSyncRefs","activeElementRef","previousActiveElementRef","window","handleKeyDown","key","Keys","Space","Enter","stopPropagation","Escape","Tab","shiftKey","focusableElements","getFocusableElements","previousIdx","indexOf","buttonIdx","focusIn","Focus","Last","First","handleKeyUp","handleClick","isDisabledReactIssue7711","currentTarget","disabled","passthroughProps","propsWeControl","onKeyDown","onClick","id","undefined","onKeyUp","DEFAULT_OVERLAY_TAG","OverlayRenderFeatures","Features","RenderStrategy","Static","Overlay","overlayRef","usesOpenClosedState","useOpenClosed","visible","features","DEFAULT_PANEL_TAG","PanelRenderFeatures","Panel","internalPanelRef","panelRef","unmount","result","Previous","Next","FocusResult","Underflow","Overflow","elements","nextElements","splice","filter","element","body","DEFAULT_GROUP_TAG","Group","groupRef","useState","popovers","setPopovers","unregisterPopover","registerbag","existing","idx","clone","slice","some","bag","getElementById","popover","contextBag"],"mappings":"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"}